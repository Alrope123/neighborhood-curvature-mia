{"filtered_text": "\\section{Introduction}Secure multi-party computation (MPC)\\cite{Yao:Protocols,Goldreich:How} is a cryptographic primitive that enables$n$ players to jointly compute an agreed function of their privateinputs in a secure way, guaranteeing the correctness of the outputsas well as the privacy of the players' inputs, even when someplayers are malicious. It has become a fundamental tool incryptography and distributed computation.  Linear secret sharingschemes (LSSS) play an important role in building MPCprotocols. Cramer {\\em et al.} \\cite{Cramer:General}developed a generic method of constructing MPC protocols from LSSS.Assuming that the function to be computed is represented as anarithmetic circuit over a finite field, their protocol ensures that eachplayer share his private input through an LSSS, and then evaluatesthe circuit gate by gate. The main idea of their protocol is to keepthe intermediate results secretly shared among the players with theunderlying  LSSS. Due to the nature of linearity, secure additions(and linear operations) can be easily achieved. For instance, ifplayer $P_i$ holds the share $x_{1i}$ for input $x_1$ and$x_{2i}$ for input $x_2$, he can locally compute $x_{1i}+x_{2i}$ which isactually $P_i$'s share for $x_1+x_2$. Unfortunately, the abovehomomorphic property does not hold for multiplication. In order tosecurely compute multiplications, Cramer {\\em et al.}\\cite{Cramer:General} introduced the concept of {\\it multiplicative} LSSS, wherethe product $x_1x_2$ can be computed as a linear combination of thelocal products of shares, that is, $x_1x_2=\\sum_{i=1}^na_ix_{1i}x_{2i}$for some constants $a_i, 1\\leq i\\leq n$. Since $x_{1i}x_{2i}$ can belocally computed by $P_i$, the product can then be securelycomputed through a linear combination. Furthermore, in order toresist against an active adversary, they defined {\\it strongly}multiplicative LSSS,  where $x_1x_2$ can be computed as a linearcombination of the local products of shares by all players excludingany corrupted subset. Therefore,  multiplicativity becomes animportant property in constructing secure MPC protocols. Forexample, using strongly multiplicative LSSS, we can construct anerror-free MPC protocol secure against an active adversary in theinformation-theoretic model \\cite{Cramer:General}. Cramer {\\em et al.}\\cite{Cramer:OnCodes} also gave an efficientreconstruction algorithm for strongly multiplicative LSSS thatrecovers the secret even when the shares submitted by the corruptedplayers contain errors. This implicit ``built-in'' verifiabilitymakes strongly multiplicative LSSS an attractive building blockfor MPC protocols.Due to their important role as the building blocks in MPC protocols,efficient constructions of multiplicative LSSS and stronglymultiplicative LSSS have been studied by several authors in recentyears. Cramer {\\em et al.} \\cite{Cramer:General} developed a genericmethod of constructing a multiplicative LSSS from any given LSSSwith a double expansion of the shares. Nikov {\\em et al.}\\cite{Nikov:multiplicativeLSSS} studied how to securely computemultiplications in a dual LSSS,  without blowing up the shares.For some specific access structures there exist very efficientmultiplicative LSSS.  Shamir's threshold secret sharing scheme is awell-known example of an ideal (strongly) multiplicative LSSS.Besides, self-dual codes give rise to ideal multiplicativeLSSS \\cite{Cramer:OnCodes}, and Liu {\\em et al.} \\cite{Liu:IEEE} provideda further class of ideal multiplicative LSSS for graph accessstructures. We note that for strongly multiplicative LSSS, theknown general construction is of exponential complexity. K\\\"{a}sper{\\em et al.} \\cite{KNN:SMHTSS} gave some efficient constructions forspecific access structures (hierarchical threshold structures). Itremains open whether there exists an efficient transformation from ageneral LSSS to a strongly multiplicative one.On the other hand, although in a multiplicative LSSS, multiplicationcan be converted into a linear combination of inputs from theplayers, each player has to {\\em reshare} the product of his shares, that is,for $1\\leq i\\leq n$, $P_i$ needs to reshare the product$x_{1i}x_{2i}$ to securely compute the linear combination$\\sum_{i=1}^na_ix_{1i}x_{2i}$. This resharing process involvescostly interactions among the players. For example,  if the playersare to securely compute multiple multiplications,$\\prod_{i=1}^lx_i$, the simple sequential multiplication requiresinteraction of round complexity proportional to $l$.  Using thetechnique developed by Bar-Ilan and Beaver \\cite{BB:ConstantRd}, Cramer {\\em et al.} \\cite{CKP:LinearAlgbra} recently showed that the round complexity can besignificantly reduced to a constant of five for unbounded fan-inmultiplications. However, the method does not seem efficient when$l$ is small. For example, considering  $x_1x_2$ and $x_1x_2x_3$, extrarounds of interactions seem unavoidable for computing $x_1x_2x_3$ ifwe apply the method of Cramer {\\em et al.} \\cite{CKP:LinearAlgbra}.\\subsection{Our Contribution}In this paper, we propose the concept of 3-multiplicative LSSS.Roughly speaking, a 3-multiplicative LSSS is a generalization ofmultiplicative LSSS, where the product $x_1x_2x_3$ is a linearcombination of the local products of shares. As one would expect, a3-multiplicative LSSS achieves better round complexity for the computation of$\\prod_{i=1}^lx_i$ compared to a multiplicative LSSS, if$l \\geq 3$. Indeed, it is easy to see that computing theproduct $\\prod_{i=1}^9x_i$ requires two rounds of interaction for a3-multiplicative LSSS but four rounds for a multiplicative LSSS. Wealso extend the concept of a 3-multiplicative LSSS to the more general$\\lambda$-multiplicative LSSS, for all integers $\\lambda \\geq 3$, andshow that $\\lambda$-multiplicative LSSS reduce the roundcomplexity by a factor of $\\frac{1}{\\log\\lambda}$ from multiplicativeLSSS. In particular, 3-multiplicative LSSS reduce the constantround complexity of computing the unbounded fan-in multiplicationfrom five to four, thus improving a result of Cramer {\\em et al.} \\cite{CKP:LinearAlgbra}.More importantly, we show that 3-multiplicative LSSS areclosely related to strongly multiplicative LSSS. The latter isknown to be a powerful tool for constructing secure MPC protocolsagainst active adversaries. More precisely, we show the following: \\begin{enumerate}[(i)]\\item 3-multiplicative LSSS are also strongly multiplicative;\\item there exists an efficient algorithm that transforms a stronglymultiplicative LSSS into a 3-multiplicative LSSS; \\item an example of a strongly multiplicative LSSS that is not 3-multiplicative.\\end{enumerate}Our results contribute to the study of MPC in the following threeaspects:\\begin{itemize}\\item The 3-multiplicative LSSS outperform stronglymultiplicative LSSS with respect to round complexity inthe construction of secure MPC protocols.\\item The 3-multiplicative LSSS are easier to construct thanstrongly multiplicative LSSS. First, the existence of an efficient transformationfrom a strongly multiplicative LSSS to a 3-multiplicative LSSSimplies that efficiently constructing 3-multiplicative LSSS isnot a harder problem. Second, verification of a stronglymultiplicative LSSS requires checking the linear combinations forall possibilities of adversary sets, while the verification of a3-multiplicative LSSS requires only one checking. We give twoconstructions of LSSS based on Reed-Muller codes and algebraic geometriccodes that can be easily verified for 3-multiplicativity, but it does not seem easy to give direct proofs of their strong multiplicativity.\\item  This work provides two possible directions toward solvingthe open problem of determining theexistence of efficient constructions for strongly multiplicativeLSSS. On the negative side, if we can prove that in theinformation-theoretic model and with polynomial size messageexchanged, computing $x_1x_2x_3$ inevitably needs more rounds ofinteractions than computing $x_1x_2$, then we can give a negativeanswer to this open problem. On the positive side, if we can find anefficient construction for 3-multiplicative LSSS, which alsoresults in strongly multiplicative LSSS, then we will have anaffirmative answer to this open problem.\\end{itemize}\\subsection{Organization}Section \\ref{sec:pre} gives notations, definition ofmultiplicative LSSS, and general constructions for stronglymultiplicative LSSS. Section \\ref{sec:3-m} defines3-multiplicative LSSS. Section \\ref{sec:3-strong} shows therelationship between 3-multiplicative LSSS and strongly multiplicativeLSSS. Section \\ref{sec:constructions} gives two constructions of 3-multiplicativeLSSS fromerror-correcting codes, and Section \\ref{sec:implication} discussesthe implications of 3-multiplicative LSSS in MPC. Section\\ref{sec:conclusion} concludes the paper.\\section{Preliminaries} \\label{sec:pre}Throughout this paper, let $P=\\{P_1,\\ldots,P_n\\}$ denote the set of $n$players and let $\\mathcal{K}$ be a finite field. In a secret sharingscheme, the collection of all subsets of players that are authorized to recoverthe secret is called its {\\it access structure}, and is denoted $AS$.An access structure possesses the monotone ascending property: if $A'\\in AS$, thenfor all $A\\subseteq P$ with $A\\supseteq A'$, we also have $A\\in AS$.Similarly, the collection of subsets of players that are possibly corruptedis called the {\\it adversary structure}, and is denoted $\\mathcal{A}$.An adversary structure possesses the monotone descending property: if $A'\\in\\mathcal{A}$, then for all $A\\subseteq P$ with $A\\subseteq A'$, we also have$A\\in \\mathcal{A}$. Owing to these monotone properties, it isoften sufficient to consider the {\\it minimum accessstructure} $AS_{min}$ and the {\\it maximum adversary structure}$\\mathcal{A}_{max}$ defined as follows:\\begin{align*}AS_{min} &=\\{A\\in AS\\mid\\forall B\\subseteq P, \\text{ we have } B\\subsetneq A\\Rightarrow B\\not\\inAS\\},\\\\\\mathcal{A}_{max} &=\\{A\\in \\mathcal{A}\\mid\\forall B\\subseteq P, \\text{ we have } B\\supsetneq A\\Rightarrow B\\not\\in\\mathcal{A}\\}.\\end{align*}In this paper, we consider the {\\em complete} situation, that is,$\\mathcal{A}=2^P-AS$. Moreover, an adversary structure$\\mathcal{A}$ is called $Q^2$ (respectively, $Q^3$) if any two (respectively,three) sets in $\\mathcal{A}$ cannot cover the entire player set$P$. For simplicity, when an adversary structure $\\mathcal{A}$ is$Q^2$ (respectively, $Q^3$) we also say the corresponding access structure$AS=2^P-\\mathcal{A}$ is $Q^2$ (respectively, $Q^3$).\\subsection{Linear Secret Sharing Schemes and Monotone Span Programs}Suppose $S$ is the secret-domain, $R$ is the set of random inputs,and $S_i$ is the share-domain of $P_i$, where $1\\leq i\\leq n$. Let {\\sf S} and {\\sf R} denote random variables taking values in $S$ and $R$, respectively.Then$\\Pi:S\\times R\\rightarrow S_1\\times\\cdots\\times S_n$ is called a {\\itsecret sharing scheme} (SSS)  with respect to the access structure $AS$, ifthe following two conditions are satisfied:\\begin{enumerate}\\item for all $A\\in AS$,  $H({\\sf S}\\mid \\Pi({\\sf S},{\\sf R})|_A)=0$;\\item  for all $B\\not\\in AS$, $H({\\sf S}\\mid \\Pi({\\sf S},{\\sf R})|_B)=H({\\sf S})$,\\end{enumerate}where $H(\\cdot)$ is the entropy function. Furthermore, the secretsharing scheme $\\Pi$ is called {\\it linear} if we have$S=\\mathcal{K}$, $R=\\mathcal{K}^{l-1}$, and $S_i=\\mathcal{K}^{d_i}$ forsome positive integers $l$ and $d_i$, $1\\leq i\\leq n$, and thereconstruction of the secret can be performed by taking a linearcombination of shares from the authorized players. The quantity $d =\\sum_{i=1}^nd_i$ is called the {\\it size} of the LSSS.Karchmer and Wigderson \\cite{Karchmer:On} introduced monotonespan programs (MSP) as a linear model for computingmonotone Boolean functions. We denote an MSP by$\\mathcal{M}(\\mathcal{K},M,\\psi,\\vec{v})$, where $M$ is a $d\\timesl$ matrix over $\\mathcal{K}$,$\\psi:\\{1,\\ldots,d\\}\\rightarrow\\{P_1,\\ldots,P_n\\}$ is a surjectivelabeling map, and $\\vec{v}\\in\\mathcal{K}^l$ is a nonzero vector. Wecall $d$ the {\\it size} of the MSP and $\\vec{v}$ the {\\it targetvector}. A monotone Boolean function $f:\\{0,1\\}^n\\rightarrow\\{0,1\\}$ satisfies $f(\\vec{\\delta}')\\geq f(\\vec{\\delta})$ forany $\\vec{\\delta}'\\geq\\vec{\\delta}$, where$\\vec{\\delta}=(\\delta_1,\\ldots,\\delta_n)$,$\\vec{\\delta}'=(\\delta'_1,\\ldots,\\delta'_n)\\in \\{0,1\\}^n$, and$\\vec{\\delta}'\\geq\\vec{\\delta}$ means $\\delta'_i\\geq\\delta_i$ for$1\\leq i\\leq n$. We say that an MSP$\\mathcal{M}(\\mathcal{K},M,\\psi,\\vec{v})$ {\\it computes the monotoneBoolean function $f$} if $\\vec{v}\\in span\\{M_A\\}$ ifand only if $f(\\vec{\\delta_A})=1$, where $A$ is a set of players, $M_A$ denotes the matrixconstricted to the rows labeled by players in $A$, $span\\{M_A\\}$denotes the linear space spanned by the row vectors of $M_A$, and$\\vec{\\delta_A}$ is the characteristic vector of $A$.\\begin{theorem}[Beimel \\cite{Beimel:Secure}] \\label{thLSSS&MSP}Suppose $AS$ is an access structure over $P$ and $f_{AS}$ is thecharacteristic function of $AS$, that is, $f_{AS}(\\vec{\\delta})=1$ ifand only if $\\vec{\\delta}=\\vec{\\delta}_A$ for some $A\\in AS$. Thenthere exists an LSSS of size $d$ that realizes $AS$ if and only ifthere exists an MSP of size $d$ that computes $f_{AS}$.\\end{theorem}Since an MSP computes the same Boolean function under lineartransformations, we can always assume that the target vector is$\\vec{e}_1=(1,0,\\ldots,0)$. From an MSP$\\mathcal{M}(\\mathcal{K},M,\\psi,\\vec{e}_1)$ that computes $f_{AS}$,we can derive an LSSS realizing $AS$ as follows: to share a secret$s\\in\\mathcal{K}$, the dealer randomly selects$\\vec{\\rho}\\in\\mathcal{K}^{l-1}$, computes $M(s,\\vec{\\rho})^\\tau$and sends $M_{P_i}(s,\\vec{\\rho})^\\tau$ to $P_i$ as his share, where$1\\leq i\\leq n$ and $\\tau$ denotes the transpose.The following property of MSP is useful in the proofs of our results. \\begin{proposition}[Karchmer and Wigderson \\cite{Karchmer:On}]\\label{prop1}Let $\\mathcal{M}(\\mathcal{K},M,\\psi,\\vec{e_1})$ be an MSP thatcomputes a monotone Boolean function $f$. Then for all$A\\subseteq P$, $\\vec{e}_1\\not\\in span\\{M_A\\}$ if and only ifthere exists $\\vec{\\rho}\\in\\mathcal{K}^{l-1}$ such that$M_A(1,\\vec{\\rho})^\\tau=\\vec{0}^\\tau$.\\end{proposition}\\subsection{Multiplicative Linear Secret Sharing Schemes}From Theorem \\ref{thLSSS&MSP},  an LSSS can be identified with itscorresponding MSP in the following way. Let$\\mathcal{M}(\\mathcal{K},M,\\psi,\\vec{e}_1)$ be an LSSS realizingthe access structure $AS$. Given two vectors$\\vec{x}=(x_1,\\ldots,x_d)$,$\\vec{y}=(y_1,\\ldots,y_d)\\in\\mathcal{K}^d$, we define$\\vec{x}\\diamond \\vec{y}$ to be the vector containing all entriesof the form $x_i\\cdot y_j$ with $\\psi(i)=\\psi(j)$. More precisely,let\\begin{align*}\\vec{x}&=(x_{11},\\ldots,x_{1d_1},\\ldots,x_{n1},\\ldots,x_{nd_n}),\\\\\\vec{y}&=(y_{11},\\ldots,y_{1d_1},\\ldots,y_{n1},\\ldots,y_{nd_n}),\\end{align*} where$\\sum_{i=1}^nd_i=d$,  and $(x_{i1},\\ldots,x_{id_i})$,$(y_{i1},\\ldots,y_{id_i})$ are the entries distributed to $P_i$according to $\\psi$. Then $\\vec{x}\\diamond \\vec{y}$ is the vectorcomposed of the $\\sum_{i=1}^nd_i^{\\;2}$ entries $x_{ij}y_{ik}$,where $1\\leq j,k\\leq d_i, 1\\leq i\\leq n$.  For consistency, wewrite the entries of $\\vec{x}\\diamond \\vec{y}$ in some fixedorder.  We also define $(\\vec{x}\\diamond\\vec{y})^\\tau=\\vec{x}^\\tau\\diamond\\vec{y}^\\tau$.\\begin{definition}[Multiplicativity]\\label{defMLSS}Let $\\mathcal{M}(\\mathcal{K},M,\\psi,\\vec{e_1})$ be an LSSS realizingthe access structure $AS$ over $P$. Then $\\mathcal{M}$ is called{\\em multiplicative} if there exists a recombination vector$\\vec{z}\\in\\mathcal{K}^{\\sum_{i=1}^nd_i^2}$, such that for all$s,s'\\in\\mathcal{K}$ and$\\vec{\\rho},\\vec{\\rho}'\\in\\mathcal{K}^{l-1}$, we have\\begin{equation*}ss'=\\vec{z}(M(s,\\vec{\\rho})^\\tau\\diamond M(s',\\vec{\\rho}')^\\tau).\\end{equation*}Moreover, $\\mathcal{M}$ is {\\em strongly multiplicative} if for all$A\\in \\mathcal{A}=2^P-AS$, $\\mathcal{M}_{\\overline{A}}$ ismultiplicative, where $\\mathcal{M}_{\\overline{A}}$ denotes the MSP$\\mathcal{M}$ constricted to the subset $\\overline{A}=P-A$.\\end{definition}\\begin{proposition}[Cramer {\\em et al.} \\cite{Cramer:General}] \\label{propQ3}Let $AS$ be an access structure over $P$. Then there exists amultiplicative (respectively, strongly multiplicative) LSSS realizing $AS$if and only if $AS$ is $Q^2$ (respectively, $Q^3$).\\end{proposition}\\subsection{General Constructions of Strongly Multiplicative LSSS} \\label{subsec:2.3}For all $Q^2$ access structure $AS$, Cramer {\\em et al.}\\cite{Cramer:General} gave an efficient construction to build amultiplicative LSSS from a general LSSS realizing the same $AS$. Itremains {\\it open} if we can {\\it efficiently} construct a stronglymultiplicative LSSS from an  LSSS. However, there are generalconstructions with exponential complexity, as described below.Since Shamir's threshold secret sharing scheme is stronglymultiplicative for all $Q^3$ threshold access structure, a propercomposition of Shamir's threshold secret sharing schemes results in a general constructionfor strongly multiplicative LSSS \\cite{Cramer:General}. Here,we give another general construction based on multiplicativeLSSS.Let $AS$ be any $Q^3$ access structure and$\\mathcal{M}(\\mathcal{K},M,\\psi,\\vec{e}_1)$ be an LSSS realizing$AS$. For all $A\\in \\mathcal{A}=2^P-AS$, it is easy to see that$\\mathcal{M}_{\\overline{A}}$ realizes the restricted  accessstructure $AS_{\\overline{A}}=\\{B\\subseteq \\overline{A}\\mid B\\inAS\\}$. The access structure $AS_{\\overline{A}}$ is $Q^2$ over$\\overline{A}$ because $AS$ is $Q^3$ over $\\overline{A}\\cup A$.Thus, we can transform $\\mathcal{M}_{\\overline{A}}$ into amultiplicative LSSS following the general construction of Cramer {\\em et al.}\\cite{Cramer:General} to obtain a stronglymultiplicative LSSS realizing $AS$. The example in Section \\ref{subsec:example}gives an illustration of this method.We note that both constructions above give LSSS of exponentialsizes,and hence are not {\\em efficient} in general.\\section{3-Multiplicative and $\\lambda$-Multiplicative LSSS} \\label{sec:3-m}In this section, we give an equivalent definition for(strongly) multiplicative LSSS. We then define 3-multiplicativeLSSS and give a necessary and sufficient condition for itsexistence. The notion of 3-multiplicativity is also extended to$\\lambda$-multiplicativity for all integer $\\lambda>1$. Finally, we present ageneric (but inefficient) construction of $\\lambda$-multiplicativeLSSS.Under the same notations used in Section 2.2,  it is straightforwardto see that we have an induced labeling map$\\psi':\\{1,\\ldots,\\sum_{i=1}^nd_i^2\\}\\rightarrow\\{P_1,\\ldots,P_n\\}$ on theentries of $\\vec{x}\\diamond\\vec{y}$, distributing the entry$x_{ij}y_{ik}$ to $P_i$, since both $x_{ij}$ and $y_{ik}$ are labeledby $P_i$ under $\\psi$. For an MSP$\\mathcal{M}(\\mathcal{K},M,\\psi,\\vec{e}_1)$, denote$M=(M_1,\\ldots,M_l)$, where $M_i\\in\\mathcal{K}^d$ is the $i$-th columnvector of $M$, $1\\leq i\\leq l$. We construct a new matrix$M_{\\diamond}$ as follows:\\begin{equation*}M_{\\diamond}=(M_1\\diamond M_1,\\ldots,M_1\\diamond M_l,M_2\\diamond M_1,\\ldots,M_2\\diamond M_l,\\ldots,M_l\\diamond M_1,\\ldots,M_l\\diamond M_l).\\end{equation*}For consistency, we also denote $M_{\\diamond}$ as $M\\diamond M$.Obviously, $M_{\\diamond}$ is a matrix over $\\mathcal{K}$ with$\\sum_{i=1}^nd_i^2$ rows and $l^2$ columns. For any two vectors$\\vec{u},\\vec{v}\\in \\mathcal{K}^l$, it is easy to verify that\\begin{equation*}(M\\vec{u}^\\tau)\\diamond(M\\vec{v}^\\tau)=M_{\\diamond}(\\vec{u}\\otimes\\vec{v})^\\tau,\\end{equation*}where $\\vec{u}\\otimes\\vec{v}$ denotes the tensor product with itsentries written in a proper order. Define the induced labeling map$\\psi'$ on the rows of $M_{\\diamond}$. We have the followingproposition.\\begin{proposition}\\label{prop2}Let $\\mathcal{M}(\\mathcal{K},M,\\psi,\\vec{e}_1)$ be an LSSSrealizing the access structure $AS$, and let $M_{\\diamond}$ be withthe labeling map $\\psi'$. Then $\\mathcal{M}$ ismultiplicative if and only if $\\vec{e}_1\\in span\\{M_{\\diamond}\\}$,where $\\vec{e}_1 = (1, 0, \\dots, 0)$. Moreover, $\\mathcal{M}$ isstrongly multiplicative if and only if $\\vec{e}_1\\inspan\\{(M_{\\diamond})_{\\overline{A}}\\}$ for all$A\\in\\mathcal{A}=2^P-AS$.\\end{proposition}\\begin{proof}By Definition \\ref{defMLSS}, $\\mathcal{M}$ is multiplicative if andonly if $ss'=\\vec{z}(M(s,\\vec{\\rho})^\\tau\\diamondM(s',\\vec{\\rho}')^\\tau)$ for all $s,s'\\in\\mathcal{K}$ and$\\vec{\\rho},\\vec{\\rho}'\\in\\mathcal{K}^{l-1}$. Obviously,\\begin{equation}\\label{eq-product}M(s,\\vec{\\rho})^\\tau\\diamondM(s',\\vec{\\rho}')^\\tau=M_{\\diamond}((s,\\vec{\\rho})\\otimes(s',\\vec{\\rho}'))^\\tau=M_{\\diamond}(ss',\\vec{\\rho}'')^\\tau,\\end{equation}where $(ss',\\vec{\\rho}'')=(s,\\vec{\\rho})\\otimes(s',\\vec{\\rho}')$. Onthe other hand, $ss'=\\vec{e}_1(ss',\\vec{\\rho}'')^\\tau$. Thus$\\mathcal{M}$ is multiplicative if and only if\\begin{equation}\\label{eq11}(\\vec{e}_1-\\vec{z}M_{\\diamond})(ss',\\vec{\\rho}'')^\\tau=0.\\end{equation}Because of the arbitrariness of $s,s',\\vec{\\rho}$ and $\\vec{\\rho}'$,equality (\\ref{eq11}) holds if and only if$\\vec{e}_1-\\vec{z}M_{\\diamond}=\\vec{0}$. Thus $\\vec{e}_1\\inspan\\{M_{\\diamond}\\}$. The latter part of the proposition can beproved similarly.$\\Box$\\end{proof}Now we are ready to give the definition of 3-multiplicative LSSS.We extend the diamond product ``$\\diamond$\" and define$\\vec{x}\\diamond\\vec{y}\\diamond\\vec{z}$ to be the vectorcontaining all entries of the form $x_i y_jz_k$ with$\\psi(i)=\\psi(j)=\\psi(k)$, where the entries of$\\vec{x}\\diamond\\vec{y}\\diamond\\vec{z}$ are written in some fixedorder.\\begin{definition}[3-Multiplicativity]\\label{def3M}Let $\\mathcal{M}(\\mathcal{K},M,\\psi,\\vec{e}_1)$ be an LSSS realizingthe access structure $AS$. Then $\\mathcal{M}$ is called{\\em $3$-multiplicative} if there exists a recombination vector$\\vec{z}\\in\\mathcal{K}^{\\sum_{i=1}^nd_i^3}$ such that for all$s_1,s_2,s_3\\in\\mathcal{K}$ and$\\vec{\\rho}_1,\\vec{\\rho}_2,\\vec{\\rho}_3\\in\\mathcal{K}^{l-1}$, we have\\begin{equation*}s_1s_2s_3=\\vec{z}(M(s_1,\\vec{\\rho}_1)^\\tau\\diamond M(s_2,\\vec{\\rho}_2)^\\tau\\diamond M(s_3,\\vec{\\rho}_3)^\\tau).\\end{equation*}\\end{definition}We can derive an equivalentdefinition for 3-multiplicative LSSS, similar to Proposition \\ref{prop2}: $\\mathcal{M}$ is3-multiplicative if and only if $\\vec{e}_1\\in span\\{(M\\diamondM\\diamond M)\\}$. The following proposition gives a necessary andsufficient condition for the existence of 3-multiplicativeLSSS.\\begin{proposition}For all access structures  $AS$,  there exists a$3$-multiplicative LSSS realizing $AS$ if and only if $AS$ is $Q^3$.\\end{proposition}\\begin{proof}Suppose $\\mathcal{M}(\\mathcal{K},M,\\psi,\\vec{e}_1)$ is a3-multiplicative LSSS realizing $AS$, and suppose to the contrary, that$AS$ is not $Q^3$, so there exist$A_1,A_2,A_3\\in\\mathcal{A}=2^P-AS$ such that $A_1\\cup A_2\\cupA_3=P$. By Proposition \\ref{prop1}, there exists$\\vec{\\rho}_i\\in\\mathcal{K}^{l-1}$ such that$M_{A_i}(1,\\vec{\\rho}_i)^\\tau=\\vec{0}^\\tau$ for $1\\leq i\\leq 3$.Since $A_1\\cup A_2\\cup A_3=P$, we have $M(1,\\vec{\\rho}_1)^\\tau\\diamondM(1,\\vec{\\rho}_2)^\\tau\\diamond M(1,\\vec{\\rho}_3)^\\tau=\\vec{0}^\\tau$,which contradicts Definition \\ref{def3M}.On the other hand, a general construction for building a3-multiplicative LSSS from a strongly multiplicative LSSS is givenin the next section, thus sufficiency is guaranteed byProposition \\ref{propQ3}.$\\Box$\\end{proof}A trivial example of 3-multiplicative LSSS is Shamir'sthreshold secret sharing scheme that realizes any $Q^3$ thresholdaccess structure. Using an identical argument for the case ofstrongly multiplicative LSSS,  we have a generalconstruction for 3-multiplicative LSSS based on Shamir's threshold secret sharingschemes, with exponential complexity.For any $\\lambda$ vectors$\\vec{x}_i=(x_{i1},\\ldots,x_{id})\\in\\mathcal{K}^d,1\\leq i\\leq \\lambda$,we define $\\diamond_{i=1}^{\\lambda}\\vec{x}_i$ to be the$\\sum_{i=1}^n{d_i^{\\lambda}}$-dimensional vector which containsentries of the form $\\prod_{i=1}^{\\lambda}x_{ij_i}$ with$\\psi(j_1)=\\cdots=\\psi(j_{\\lambda})$.\\begin{definition}[\\boldmath $\\lambda$-Multiplicativity]Let $\\mathcal{M}(\\mathcal{K},M,\\psi,\\vec{e}_1)$ be an LSSSrealizing the access structure $AS$, and let $\\lambda>1$ be an integer.Then $\\mathcal{M}$ is {\\em $\\lambda$-multiplicative} if thereexists a recombination vector $\\vec{z}$ such that for all$s_1,\\ldots,s_{\\lambda}\\in\\mathcal{K}$ and$\\vec{\\rho}_1,\\ldots,\\vec{\\rho}_{\\lambda}\\in\\mathcal{K}^{l-1}$, wehave\\begin{equation*}\\prod_{i=1}^{\\lambda}s_i=\\vec{z}(\\diamond_{i=1}^{\\lambda}M(s_i,\\vec{\\rho}_i)^\\tau).\\end{equation*}Moreover, $\\mathcal{M}$ is {\\em strongly$\\lambda$-multiplicative} if for all $A\\not\\in AS$, theconstricted LSSS $\\mathcal{M}_{\\overline{A}}$ is$\\lambda$-multiplicative.\\end{definition}Again, we can define a new matrix by taking the diamond product of$\\lambda$ copies of $M$. This gives an equivalence to(strongly) $\\lambda$-multiplicative LSSS. Also, since Shamir'sthreshold secret sharing scheme is trivially$\\lambda$-multiplicative and strongly $\\lambda$-multiplicative, aproper composition of Shamir's threshold secret sharing schemes results ina general construction for both $\\lambda$-multiplicative LSSS andstrongly $\\lambda$-multiplicative LSSS. Let $Q^\\lambda$ be astraightforward extension of $Q^2$ and $Q^3$, that is, an accessstructure $AS$ is $Q^\\lambda$ if the player set $P$ cannot be covered by$\\lambda$ sets in$\\mathcal{A}=2^P-AS$. Thefollowing corollary is easy to prove.\\begin{corollary}Let $AS$ be an access structure over $P$. Then there exists a$\\lambda$-multiplicative (respectively, strongly $\\lambda$-multiplicative)LSSS realizing $AS$ if and only if $AS$ is $Q^{\\lambda}$ (respectively,$Q^{\\lambda+1}$).\\end{corollary}Since a $\\lambda$-multiplicative LSSS transforms the products of$\\lambda$ entries into a linear combination of the local productsof shares, it can be used to simplify the secure computation ofsequential multiplications. In particular,  when compared to usingonly the multiplicative property (which corresponds to thecase when $\\lambda=2$), a $\\lambda$-multiplicative LSSS can leadto reduced round complexity by a factor of $\\frac{1}{\\log\\lambda}$in certain cases.We also point out that $Q^\\lambda$ is not a necessary condition forsecure computation. Instead, the necessary condition is $Q^2$ for thepassive adversary model,   or $Q^3$ for the active adversary model\\cite{Cramer:General}. The condition $Q^\\lambda$ is just a necessary conditionfor the existence of $\\lambda$-multiplicative LSSS which can beused to simplify computation. In practice, many thresholdadversary structures satisfy the $Q^\\lambda$ condition for some appropriateinteger $\\lambda$, and the widely used Shamir's threshold secret sharingscheme is already $\\lambda$-multiplicative. By using this$\\lambda$-multiplicativity, we can get more efficient MPC protocols.However, since the special case $\\lambda=3$ shows a closerelationship with strongly multiplicative LSSS, afundamental tool in MPC, this paper focuses on 3-multiplicativeLSSS.\\section{Strong Multiplicativity and 3-Multiplicativity} \\label{sec:3-strong}In this section, we show that strong multiplicativity and3-multiplicativity are closely related. On the one hand,given a strongly multiplicative LSSS, there is an {\\it efficient}transformation that converts it to a 3-multiplicative LSSS. On theother hand, we show that any 3-multiplicative LSSS is astrongly multiplicative LSSS, but the converse is not true. It should be noted that strongmultiplicativity, as defined, has a combinatorial nature.The definition of 3-multiplicativity is essentially algebraic, which is typicallyeasier to verify.\\subsection{From Strong Multiplicativity to 3-Multiplicativity} \\label{subsec:s->3}We show a general method to efficiently build a3-multiplicative LSSS from a strongly multiplicative LSSS, for all$Q^3$ access structures. As an extension, the proposed method can also be usedto efficiently build a $(\\lambda+1)$-multiplicative LSSS from astrongly $\\lambda$-multiplicative LSSS.\\begin{theorem}\\label{prop5}Let $AS$ be a $Q^3$ access structure and$\\mathcal{M}(\\mathcal{K},M,\\psi,\\vec{e}_1)$ be a stronglymultiplicative LSSS realizing $AS$. Suppose that $\\mathcal{M}$has size $d$ and $|\\psi^{-1}(P_i)|=d_i$, for $1\\leq i\\leq n$. Then thereexists a $3$-multiplicative LSSS for $AS$ of size $O(d^2)$.\\end{theorem}\\begin{proof}We give a constructive proof. Let $M_{\\diamond}$ bethe matrix defined in Section \\ref{sec:3-m}, and $\\psi'$ be theinduced labeling map on the rows of $M_{\\diamond}$. Then we have anLSSS$\\mathcal{M}_{\\diamond}(\\mathcal{K},M_{\\diamond},\\psi',\\vec{e}_1)$that realizes an access structure $AS_{\\diamond}$. Because$\\mathcal{M}$ is strongly multiplicative, by Proposition \\ref{prop2}we have $\\vec{e}_1\\in span\\{(M_{\\diamond})_{\\overline{A}}\\}$ for all$A\\not\\in AS$. Therefore $\\overline{A}\\in AS_{\\diamond}$ and itfollows that $AS^*\\subseteq AS_{\\diamond}$, where $AS^*$ denotes thedual access structure of $AS$, defined by$AS^*=\\{A\\subseteq P\\mid P-A\\not\\in AS\\}$.The equality (\\ref{eq-product}) in the proof of Proposition\\ref{prop2} shows that the diamond product of two share vectorsequals sharing the product of the two secrets by the MSP$\\mathcal{M}_{\\diamond}(\\mathcal{K},M_{\\diamond},\\psi',\\vec{e}_1)$,that is,\\begin{equation*}(M(s_1,\\vec{\\rho}'_1)^\\tau)\\diamond(M(s_2,\\vec{\\rho}'_2)^\\tau)=M_{\\diamond}(s_1s_2,\\vec{\\rho})^\\tau, ~\\mbox{~for some $\\vec{\\rho}'_1, \\vec{\\rho}'_2, \\vec{\\rho} \\in {\\cal K}^{l-1}$}.\\end{equation*}Thus, using a method similar to Nikov {\\em et al.} \\cite{Nikov:multiplicativeLSSS}, we can get theproduct $(s_1s_2)\\cdot s_3$ by sharing $s_3$ through the dual MSP of$\\mathcal{M}_{\\diamond}$, denoted by $(\\mathcal{M}_{\\diamond})^*$.Furthermore, since $(\\mathcal{M}_{\\diamond})^*$ realizes the dualaccess structure $(AS_\\diamond)^*$ and $(AS_\\diamond)^*\\subseteq(AS^*)^*=AS$, we can build a 3-multiplicative LSSS by the union of$\\mathcal{M}$ and $(\\mathcal{M}_{\\diamond})^*$, which realizes theaccess structure $AS \\cup (AS_\\diamond)^*=AS$. Now following the samemethod of Cramer {\\em et al.} and Fehr\\cite{Cramer:General,Fehr:DualMSP}, we prove the required result via the construction below.Compute the column vector $\\vec{v}_0$ as a solution to the equation$(M_{\\diamond})^\\tau\\vec{v}=\\vec{e_1}^\\tau$ for $\\vec{v}$,and compute $\\vec{v}_1,\\ldots,\\vec{v}_k$ as a basis of the solutionspace to $(M_{\\diamond})^\\tau\\vec{v}=\\vec{0}^\\tau$. Note that$(M_{\\diamond})^\\tau\\vec{v}=\\vec{e_1}^\\tau$ is solvable because$\\vec{e}_1\\in span\\{(M_{\\diamond})_{\\overline{A}}\\}$ for all$A\\not\\in AS$, while $(M_{\\diamond})^\\tau\\vec{v}=\\vec{0}^\\tau$ mayonly have the trivial solution $\\vec{v}=\\vec{0}$ and $k=0$. Let\\begin{equation*}M'=\\left(\\begin{array}{cccccc}m_{11}&\\cdots&m_{1l}& & &\\\\\\vdots&\\ddots&\\vdots& & & \\\\m_{d1}&\\cdots&m_{dl}& & &\\\\\\vec{v_0}& &&\\vec{v_1}&\\cdots&\\vec{v_k}\\end{array}\\right),\\end{equation*}where$\\left(\\begin{array}{ccc}m_{11}&\\cdots&m_{1l}\\\\\\vdots&\\ddots&\\vdots\\\\m_{d1}&\\cdots&m_{dl}\\end{array}\\right)=M$and the blanks in $M'$ denote zeros. Define a labeling map$\\psi''$ on the rows of $M'$ which labels the first $d$ rows of$M'$ according to $\\psi$ and the other $\\sum_{i=1}^nd_i^2$ rowsaccording to $\\psi'$.As mentioned above, $\\mathcal{M}'(\\mathcal{K},M',\\psi'',\\vec{e}_1)$obviously realizes the access structure $AS$. We now verify its3-multiplicativity.Let $N=(\\vec{v}_0, \\vec{v}_1,\\ldots,\\vec{v}_k)$,  a matrix over$\\mathcal{K}$ with $\\sum_{i=1}^nd_i^2$ rows and $k+1$ columns. For$s_i\\in\\mathcal{K}$ and$\\vec{\\rho}_i=(\\vec{\\rho}'_i,\\vec{\\rho}''_i)\\in\\mathcal{K}^{l-1}\\times \\mathcal{K}^k$, $1\\leq i\\leq 3$, denote$M'(s_i,\\vec{\\rho}_i)^\\tau=(\\vec{u}_i,\\vec{w}_i)^\\tau$, where$\\vec{u}_i^{\\;\\tau}=M(s_i,\\vec{\\rho}'_i)^\\tau$ and$\\vec{w}_i^{\\;\\tau}=N(s_i,\\vec{\\rho}''_i)^\\tau$. We have\\begin{equation*}\\vec{u}_1^{\\;\\tau}\\diamond\\;\\vec{u}_2^{\\;\\tau}=(M(s_1,\\vec{\\rho}'_1)^\\tau)\\diamond(M(s_2,\\vec{\\rho}'_2)^\\tau)=M_{\\diamond}(s_1s_2,\\vec{\\rho})^\\tau,\\end{equation*}where$(s_1s_2,\\vec{\\rho})=(s_1,\\vec{\\rho}'_1)\\otimes(s_2,\\vec{\\rho}'_2)$.Then,\\begin{align*}(\\vec{u}_1\\diamond\\vec{u}_2)\\cdot\\vec{w}_3^{\\;\\tau} &=(s_1s_2,\\vec{\\rho})(M_{\\diamond})^{\\tau}\\cdot N\\left(\\begin{array}{c}s_3\\\\ \\\\ {\\vec{\\rho}_3''}^{\\;\\tau}\\end{array}\\right) \\\\&=(s_1s_2,\\vec{\\rho})\\left(\\begin{array}{cccc}1&0&\\cdots&0\\\\0&0&\\cdots&0\\\\\\vdots&\\vdots&\\ddots&\\vdots\\\\0&0&\\cdots&0\\end{array}\\right)\\left(\\begin{array}{c}s_3\\\\ \\\\ {\\vec{\\rho}_3''}^{\\;\\tau}\\end{array}\\right)\\\\&=s_1s_2s_3.\\end{align*}It is easy to see that$(\\vec{u}_1\\diamond\\vec{u}_2)\\cdot\\vec{w}_3^{\\;\\tau}$ is alinear combination of the entries from$(\\vec{u}_1\\diamond\\vec{u}_2)\\diamond \\vec{w}_3$,  and so is a linearcombination of the entries from $M'(s_1,\\vec{\\rho}_1)^\\tau\\diamondM'(s_2,\\vec{\\rho}_2)^\\tau\\diamond M'(s_3,\\vec{\\rho}_3)^\\tau$.Hence $\\mathcal{M}'$ is a 3-multiplicative LSSS for $AS$. Obviously,the size of $\\mathcal{M}'$ is $O(d^2)$, since $d+\\sum_{i=1}^nd_i^2 <d^2 + d.$$\\Box$\\end{proof}If we replace the matrix $M_{\\diamond}$ above by the diamondproduct of $\\lambda$ copies of $M$,  using an identical argument,the construction from  Theorem \\ref{prop5} gives rise to  a$(\\lambda+1)$-multiplicative LSSS from a strongly$\\lambda$-multiplicative LSSS.\\begin{corollary}\\label{coro2}Let $AS$ be a $Q^{\\lambda+1}$ access structure and$\\mathcal{M}(\\mathcal{K},M,\\psi,\\vec{e}_1)$ be a strongly$\\lambda$-multiplicative LSSS realizing $AS$. Suppose the size of$\\mathcal{M}$ is $d$ and $|\\psi^{-1}(P_i)|=d_i$, for $1\\leq i\\leq n$.Then there exists a $(\\lambda+1)$-multiplicative LSSS for $AS$ ofsize $O(d^{\\lambda})$.\\end{corollary}\\subsection{From 3-Multiplicativity to Strong Multiplicativity}\\begin{theorem}\\label{th5}Any $3$-multiplicative LSSS is strongly multiplicative.\\end{theorem}\\begin{proof}Let $\\mathcal{M}(\\mathcal{K},M,\\psi,\\vec{e}_1)$ be a3-multiplicative LSSS realizing the access structure $AS$ over$P$. For all $A\\in\\mathcal{A}=2^P-AS$, by Proposition \\ref{prop1},we can choose a fixed vector $\\vec{\\rho}''\\in\\mathcal{K}^{l-1}$such that $M_{A}(1,\\vec{\\rho}'')^\\tau=\\vec{0}^\\tau$.There exists a recombination vector$\\vec{z}\\in\\mathcal{K}^{\\sum_{i=1}^nd_i^3}$ such that for all$s,s'\\in\\mathcal{K}$ and$\\vec{\\rho},\\vec{\\rho}'\\in\\mathcal{K}^{l-1}$, we have\\begin{equation*}ss'=\\vec{z}(M(s,\\vec{\\rho})^\\tau\\diamond M(s',\\vec{\\rho}')^\\tau\\diamond M(1,\\vec{\\rho}'')^\\tau).\\end{equation*}Since $M_{A}(1,\\vec{\\rho}'')^\\tau=\\vec{0}^\\tau$, and$M_{\\overline{A}}(1,\\vec{\\rho}'')^\\tau$ is a constant vector forfixed $\\vec{\\rho}''$,  the vector$\\vec{z}'\\in\\mathcal{K}^{\\sum_{P_i\\not\\in A}d_i^2}$ that satisfies\\begin{equation*}\\vec{z}(M(s,\\vec{\\rho})^\\tau\\diamond M(s',\\vec{\\rho}')^\\tau\\diamond M(1,\\vec{\\rho}'')^\\tau)=\\vec{z}'(M_{\\overline{A}}(s,\\vec{\\rho})^\\tau\\diamond M_{\\overline{A}}(s',\\vec{\\rho}')^\\tau)\\end{equation*}can be easily determined.Thus $ss'=\\vec{z}'(M_{\\overline{A}}(s,\\vec{\\rho})^\\tau\\diamondM_{\\overline{A}}(s',\\vec{\\rho}')^\\tau)$. Hence,  $\\mathcal{M}$ isstrongly multiplicative.$\\Box$\\end{proof}Although 3-multiplicative LSSS is a subclass of stronglymultiplicative LSSS, one of the advantages of 3-multiplicativity isthat its verification admits a simpler process. For 3-multiplicativity,we need only to check that $\\vec{e}_1\\in span\\{(M\\diamond M\\diamond M)\\}$,while strong multiplicativity requires the verification of $\\vec{e}_1\\in span\\{(M\\diamond M)_{\\overline{A}}\\}$ for{\\em all} $A\\not\\in AS$.Using a similar argument, the following results for$(\\lambda+1)$-multiplicativity can be proved:\\begin{enumerate}[(i)]\\item A$(\\lambda+1)$-multiplicative LSSS is a strongly$\\lambda$-multiplicative LSSS.\\item A $\\lambda$-multiplicative LSSS is a $\\lambda'$-multiplicative LSSS,where $1<\\lambda'<\\lambda$.\\end{enumerate}\\subsection{An Example of  a Strongly Multiplicative LSSS that is Not3-Multiplicative} \\label{subsec:example}We  give an example of a strongly multiplicative LSSS that is not3-multiplicative. It follows that  3-multiplicative LSSS arestrictly contained in the class of strongly multiplicative LSSS. Theconstruction process is as follows. Start with an LSSS that realizesa $Q^3$ access structure but is not strongly multiplicative. We thenapply the general construction given in Section \\ref{subsec:2.3} toconvert it into a strongly multiplicative LSSS. The resulting LSSSis however not 3-multiplicative.Let $P=\\{P_1,P_2,P_3,P_4,P_5,P_6\\}$ be the set of players.Consider the access structure $AS$ over $P$ defined by\\begin{equation*}AS_{min}=\\{(1,2),(3,4),(5,6),(1,5),(1,6),(2,6),(2,5),(3,6),(4,5)\\},\\end{equation*}where we use subscript to denote the corresponding player. Forexample, $(1,2)$ denotes the subset $\\{P_1,P_2\\}$. Itis easy to verify that the corresponding adversary structure is\\begin{equation*}\\mathcal{A}_{max}=\\{(1,3),(1,4),(2,3),(2,4),(3,5),(4,6)\\},\\end{equation*}and that $AS$ is a $Q^3$ access structure.Let $\\mathcal{K}=\\mathbb{F}_2$. Define the matrix $M$ over$\\mathbb{F}_2$ with the labeling map $\\psi$ such that\\begin{align*}M_{P_1}=\\left(\\begin{array}{ccccc}1&0&1&0&0\\\\0&0&0&1&0\\\\0&0&0&0&1\\end{array}\\right),\\;M_{P_2}=\\left(\\begin{array}{ccccc}0&0&1&0&0\\\\0&0&0&1&0\\\\0&0&0&0&1\\end{array}\\right),\\;M_{P_3}=\\left(\\begin{array}{ccccc}1&1&0&0&0\\\\0&0&0&0&1\\end{array}\\right),\\\\M_{P_4}=\\left(\\begin{array}{ccccc}0&1&0&0&0\\\\0&0&0&1&0\\end{array}\\right),\\;M_{P_5}=\\left(\\begin{array}{ccccc}1&1&1&0&0\\\\1&0&0&1&0\\end{array}\\right),\\;M_{P_6}=\\left(\\begin{array}{ccccc}0&1&1&0&0\\\\1&0&0&0&1\\end{array}\\right).\\end{align*}It can be verified that the LSSS$\\mathcal{M}(\\mathbb{F}_2,M,\\psi,\\vec{e}_1)$ realizes the accessstructure $AS$. Moreover, for all $A\\in\\mathcal{A}-\\{(1,3),(1,4)\\}$,the constricted LSSS $\\mathcal{M}_{\\overline{A}}$ is multiplicative.Thus in order to get a strongly multiplicative LSSS, we just need toexpand $\\mathcal{M}$ with multiplicativity when constricted to both $\\{P_2,P_4,P_5,P_6\\}$ and $\\{P_2,P_3,P_5,P_6\\}$.Firstly,  consider the LSSS $\\mathcal{M}$ constricted to$P'=\\{P_2,P_4,P_5,P_6\\}$. Obviously, $\\mathcal{M}_{P'}$ realizesthe access structure $AS'_{min}=\\{(5,6),(2,6),(2,5),(4,5)\\}$, whichis $Q^2$ over $P'$. By the method of Cramer {\\em et al.} \\cite{Cramer:General}, we cantransform $\\mathcal{M}_{P'}$ into the multiplicative LSSS$\\mathcal{M}'_{P'}(\\mathbb{F}_2,M',\\psi',\\vec{e}_1)$ defined asfollows:\\begin{align*}M'_{P_2}=\\left(\\begin{array}{ccccccccc}0&0&1&0&0& & & & \\\\0&0&0&1&0& & & & \\\\0&0&0&0&1& & & & \\\\ & & & & &0&1&1&1\\\\ & & & & &1&1&0&0\\\\ & & & & &0&0&0&1\\end{array}\\right),~~~~M'_{P_4}=\\left(\\begin{array}{ccccccccc}0&1&0&0&0& & & &\\\\0&0&0&1&0& & & & \\\\ & & & & &0&1&1&1\\\\ & & & &&1&0&0&0\\end{array}\\right),\\\\M'_{P_5}=\\left(\\begin{array}{ccccccccc}1&1&1&0&0& & & & \\\\1&0&0&1&0&& & & \\\\1& & & & &0&1&0&1\\\\0& & & &&0&1&0&0\\end{array}\\right),~~~~M'_{P_6}=\\left(\\begin{array}{ccccccccc}0&1&1&0&0& & & &\\\\1&0&0&0&1& & & & \\\\1& & & & &0&0&1&0\\\\0& & & &&0&0&0&1\\end{array}\\right),\\end{align*}where the blanks in the matricesdenote zeros.For consistency, we define\\begin{align*}M'_{P_1} &=(M_{P_1}\\;O_{3\\times4}),\\\\M'_{P_3} &=(M_{P_3}\\;O_{2\\times4}),\\end{align*}where $O_{m\\times n}$ denotes the $m\\times n$matrix of all zeros. It can be verified thatfor the subset $P''=\\{P_2,P_3,P_5,P_6\\}$, the constricted LSSS$\\mathcal{M}'_{P''}$ is indeed multiplicative. Therefore,$\\mathcal{M}'(\\mathbb{F}_2,M',\\psi',\\vec{e}_1)$ is a stronglymultiplicative LSSS realizing the access structure $AS$.Furthermore,  it can be verified that $\\mathcal{M}'$ is not3-multiplicative (the verification involves checking a$443\\times 729$ matrix using Matlab).The scheme$\\mathcal{M}(\\mathbb{F}_2,M,\\psi,\\vec{v}_1)$ given above is thefirst example of an LSSS which realizes a $Q^3$ access structurebut is not strongly multiplicative.\\section{Constructions for $3$-multiplicative LSSS} \\label{sec:constructions}It is tempting to find efficient constructions for 3-multiplicativeLSSS. In general, it is a hard problem to construct LSSS withpolynomial size for any specified access structure, and it seems to be an even harder problemto construct polynomial size 3-multiplicative LSSS with general $Q^3$ access structures. Wemention two constructions for 3-multiplicative LSSS. These constructions aregenerally inefficient, which can result in schemes with exponential sizes.The two constructions are:\\begin{enumerate}\\item The Cramer-Damg{\\aa}rd-Maurer construction based on Shamir'sthreshold secret sharing scheme \\cite{Cramer:General}.\\item The construction given in Subsection \\ref{subsec:s->3} basedon strongly multiplicative LSSS.\\end{enumerate}There exist, however, some efficient LSSS with specific accessstructures that are multiplicative or 3-multiplicative. For instance,Shamir's $t$ out of $n$ threshold secret sharing schemes are multiplicative if $n\\geq 2t+1$,  and 3-multiplicative if $n \\geq 3t+1$.On the other hand, secret sharing schemes from error-correcting codes give goodmultiplicative properties. It is well known that a secret sharing scheme from a linearerror-correcting code is an LSSS. We knowthat such an LSSS is multiplicative provided the underlying code is aself dual code \\cite{Cramer:OnCodes}. The LSSS from a Reed-Solomon code is $\\lambda$-multiplicative ifthe corresponding access structure is $Q^{\\lambda}$. In thissection, we show the multiplicativity of two other classesof secret sharing schemes from error-correcting codes:\\begin{enumerate}[(i)]\\item schemes fromReed-Muller codes are $\\lambda$-multiplicative LSSS; and \\itemschemes from algebraic geometric codes are$\\lambda$-multiplicative ramp LSSS.\\end{enumerate}\\subsection{A Construction from Reed-Muller Codes}Let $\\vec{v}_0,\\vec{v}_1,\\ldots,\\vec{v}_{2^m-1}$ be all the points inthe space $\\mathbb{F}_2^{\\;m}$. The binary Reed-Muller code$\\mathcal{R}(r,m)$ is defined as follows:\\begin{equation*}\\mathcal{R}(r,m)=\\{(f(\\vec{v}_0),f(\\vec{v}_1),\\ldots,f(\\vec{v}_{2^m-1}))\\mid f\\in\\mathbb{F}_2[x_1,\\ldots,x_m],\\;\\deg f\\leqr\\}.\\end{equation*}Take $f({\\vec{v}_0})$ as  the secret, and $f({\\vec{v}_i})$ as theshare distributed to player $P_i$, $1\\leq i\\leq 2^m-1$. Then$\\mathcal{R}(r,m)$ gives rise to an LSSS for the set of players$\\{P_1,\\ldots,P_n\\}$,  with the secret-domain being$\\mathbb{F}_2$, where$n=2^m-1$. For any three codewords\\begin{equation*}\\vec{c}_i=(s_i,s_{i1},\\ldots,s_{in})=(f_i(\\vec{v}_0),f_i(\\vec{v}_1),\\ldots,f_i(\\vec{v}_n))\\in\\mathcal{R}(r,m),~~1\\leq i\\leq 3,\\end{equation*}it is easy to see that\\begin{align*}\\vec{c}_1\\diamond\\vec{c}_2\\diamond\\vec{c}_3 &=(s_1s_2s_3,s_{11}s_{21}s_{31},\\ldots,s_{1n}s_{2n}s_{3n}) \\\\&=(g(\\vec{v}_0),g(\\vec{v}_1),\\ldots,g(\\vec{v}_n))\\in\\mathcal{R}(3r,m),\\end{align*}where $g=f_1f_2f_3\\in\\mathbb{F}_2[x_1,\\ldots,x_m]$ and $\\deg g\\leq 3r$.From basic results on Reed-Muller codes \\cite{Lint:Code}, we know that$\\mathcal{R}(3r,m)$ has dual code$\\mathcal{R}(m-3r-1,m)$ when $m>3r$, and  the dual code$\\mathcal{R}(m-3r-1,m)$ trivially contains the codeword$(1,1,\\ldots,1)$. It follows that$s_1s_2s_3=\\sum_{j=1}^ns_{1j}s_{2j}s_{3j}$, which shows that the LSSS from$\\mathcal{R}(r,m)$ is 3-multiplicative when$m>3r$. Certainly, this LSSS is strongly multiplicative. In general,we have the following result:\\begin{theorem} \\label{thm:RM-code}The LSSS constructed above from$\\mathcal{R}(r,m)$ is $\\lambda$-multiplicative, provided $m >\\lambda r$.\\end{theorem}\\subsection{A Construction from Algebraic Geometric Codes}Chen and Cramer \\cite{CC:AGRamp} constructed secret sharingschemes from algebraic geometric (AG) codes. These schemesare {\\em quasi-threshold} (or {\\em ramp}) schemes, whichmeans that any $t$ out of $n$ players can recover the secret, and any fewerthan $t'$ players have no information about the secret, where$t'\\leq t \\leq n$. In this section, we show that ramp schemes fromsome algebraic geometric codes \\cite{{CC:AGRamp}} are$\\lambda$-multiplicative.Let $\\chi$ be an absolutely irreducible, projective, and nonsingularcurve defined over $\\mathbb{F}_q$ with genus $g$, and let$D=\\{v_0,v_1,\\ldots,v_n\\}$ be the set of $\\mathbb{F}_q$-rational pointson $\\chi$. Let $G$ be an $\\mathbb{F}_q$-rational divisor with degree $m$satisfying $supp(G) \\cap D=\\emptyset$ and $2g-2<m<n+1$. Let$\\overline{\\mathbb{F}}_q$ denote the algebraic closure of$\\mathbb{F}_q$, let $\\overline{\\mathbb{F}}_q(\\chi)$ denote the functionfield of the curve $\\chi$, and let $\\Omega(\\chi)$ denote all thedifferentials on $\\chi$. Define the linear spaces:\\begin{align*}\\mathcal{L}(G) &=\\{f\\in\\overline{\\mathbb{F}}_q(\\chi)\\mid (f)+G\\geq 0\\},\\\\\\Omega(G) &=\\{\\omega\\in\\Omega(\\chi)\\mid (\\omega)\\geq G\\}.\\end{align*}Then the functional AG code $C_\\mathcal{L}(D,G)$ and residual AGcode $C_{\\Omega}(D,G)$ are respectively defined as follows:\\begin{align*}C_\\mathcal{L}(D,G) &=\\{(f(v_0),f(v_1),\\ldots,f(v_n))\\mid f\\in\\mathcal{L}(G)\\}\\subseteq \\mathbb{F}_q^{\\;n+1}, \\\\C_{\\Omega}(D,G) &=\\{(Res_{v_0}(\\eta),Res_{v_1}(\\eta),\\ldots,Res_{v_n}(\\eta))\\mid\\eta\\in\\Omega(G-D)\\}\\subseteq\\mathbb{F}_q^{\\;n+1},\\end{align*}where $Res_{v_i}(\\eta)$ denotes the residue of $\\eta$ at $v_i$.As above, $C_{\\Omega}(D,G)$ induces an LSSS for the set of players$\\{P_1,\\ldots,P_n\\}$, where for every codeword$(f(v_0),f(v_1),\\ldots,f(v_n))\\inC_{\\Omega}(D,G)=C_{\\mathcal{L}}(D,D-G+(\\eta))$, $f(v_0)$ is thesecret and $f(v_i)$ is $P_i$'s share, $1\\leq i\\leq n$. For any$\\lambda$ codewords\\begin{align*}\\vec{c}_i &=(s_i,s_{i1},\\ldots,s_{in}) \\\\&=(f_i(v_0),f_i(v_1),\\ldots,f_i(v_n))\\in C_{\\mathcal{L}}(D,D-G+(\\eta)),~~~1\\leqi\\leq \\lambda,\\end{align*}it is easy to see that\\begin{equation*}\\diamond_{i=1}^\\lambda\\vec{c}_i=\\left(\\prod_{i=1}^\\lambda s_i,\\prod_{i=1}^\\lambda s_{i1},\\ldots,\\prod_{i=1}^\\lambda s_{in}\\right)\\in C_\\mathcal{L}(D,\\lambda(D-G+(\\eta))).\\end{equation*}If $2g-2<\\deg(\\lambda(D-G+(\\eta)))<n$, then$C_\\mathcal{L}(D,\\lambda(D-G+(\\eta)))$ has the dual code$C_{\\Omega}(D,\\lambda(D-G+(\\eta)))=C_{\\mathcal{L}}(D,\\lambdaG-(\\lambda-1)(D+(\\eta)))$. When $\\deg(\\lambdaG-(\\lambda-1)(D+(\\eta)))\\geq 2g$,$C_{\\Omega}(D,\\lambda(D-G+(\\eta)))$ has a codeword with a nonzerofirst coordinate, implying $\\prod_{i=1}^\\lambdas_i=\\sum_{j=1}^na_j\\prod_{i=1}^\\lambda s_{ij}$ for some constants$a_j\\in\\mathbb{F}_q$. Thus, the LSSS induced by the AG code$C_{\\Omega}(D,G)$ is $\\lambda$-multiplicative. It is easy to see thatif $\\deg G = m \\geq\\frac{(\\lambda-1)(n-1)}{\\lambda}+2g$ then we have$2g-2<\\deg(\\lambda(D-G+(\\eta)))<n$ and  $\\deg(\\lambdaG-(\\lambda-1)(D+(\\eta)))\\geq 2g$. Therefore, we have thefollowing theorem.\\begin{theorem}Let $\\chi$ be an absolutely irreducible, projective, and nonsingularcurve defined over $\\mathbb{F}_q$ with genus $g$, let$D=\\{v_0,v_1,\\ldots,v_n\\}$ be the set of $\\mathbb{F}_q$-rational pointson $\\chi$. Let $G$ be an $\\mathbb{F}_q$-rational divisor with degree $m$satisfying $supp(G) \\cap D=\\emptyset$ and $2g-2<m<n+1$. Then theLSSS induced by the AG code $C_{\\Omega}(D,G)$ is$\\lambda$-multiplicative, provided$m\\geq\\frac{(\\lambda-1)(n-1)}{\\lambda}+2g$.\\end{theorem}\\section{Implications of the Multiplicativity of LSSS} \\label{sec:implication}The property of 3-multiplicativity implies strong multiplicativity, and so issufficient for building MPC protocols against active adversaries. The conditions for 3-multiplicativity areeasy to verify, while verification for strong multiplicativityinvolves checking an exponential number of  equations (each subset inthe adversary structure corresponds to an equation).With 3-multiplicative LSSS, or more generally$\\lambda$-multiplicative LSSS, we can simplify local computationfor each player and reduce the round complexity in MPCprotocols. For example, using the technique of Bar-Ilan and Beaver\\cite{BB:ConstantRd}, we can compute $\\prod_{i=1}^lx_i,\\;x_i\\in\\mathbb{F}_q$, in a constant number of rounds, independent of $l$. Forsimplicity, we consider passive adversaries in theinformation-theoretic model. Suppose for $1\\leq i\\leq l$, the sharesof $x_i$, denoted by $[x_i]$, have already been distributed amongthe players. To compute $\\prod_{i=1}^lx_i,\\; x_i\\in\\mathbb{F}_q$, wefollow the process of Cramer {\\em et al.} \\cite{CKP:LinearAlgbra}:\\begin{enumerate}[(1)]\\item Generate$[b_0\\in_R\\mathbb{F}_q^{\\;*}],[b_1\\in_R\\mathbb{F}_q^{\\;*}],\\ldots,[b_l\\in_R\\mathbb{F}_q^{\\;*}]$and $[b_0^{-1}],[b_1^{-1}],\\ldots,[b_l^{-1}]$, where$b_i\\in_R\\mathbb{F}_q^{\\;*}$ means that $b_i$ is a random element in$\\mathbb{F}_q^{\\;*}$.\\item For $1\\leq i\\leq l$, each player computes $[b_{i-1}x_ib_i^{-1}]$from $[b_{i-1}],[b_i^{-1}]$ and $[x_i]$.\\item Recover $d_i=b_{i-1}x_ib_i^{-1}$ from $[b_{i-1}x_ib_i^{-1}]$ for$1\\leq i\\leq l$, and compute $d=\\prod_{i=1}^{l}d_i$.\\item Compute $[db_0^{-1}b_l]$ from $[b_0^{-1}],[b_l]$ and $d$.\\end{enumerate}It is easy to see that $db_0^{-1}b_l=\\prod_{i=1}^lx_i$. Usinga strongly multiplicative LSSS, the above process takes fiverounds of interactions as two rounds are required in Step (2).However,  if we use a 3-multiplicative LSSS instead, thenonly one round is needed for Step (2). Thus, 3-multiplicative LSSS reducethe round complexity of computing unbounded fan-in multiplicationfrom five to four. This in turn simplifies the computation of manyproblems, such as polynomial evaluation and solving linearsystems of equations.In general, the relationship between  $\\lambda$-multiplicative LSSSand strongly $\\lambda$-multiplicative LSSS can be described asfollows:\\begin{equation*}\\cdots\\subseteq SMLSSS_{\\lambda+1}\\subsetneq  MLSSS_{\\lambda+1}\\subseteq SMLSSS_{\\lambda}\\subsetneq MLSSS_{\\lambda}\\subseteq\\cdots,\\end{equation*}where $MLSSS_{\\lambda}$ (respectively, $SMLSSS_{\\lambda}$) denotes the classof  $\\lambda$-multiplicative (respectively, strongly $\\lambda$-multiplicative) LSSS. It is easy to see that $SMLSSS_{\\lambda}\\subsetneqMLSSS_{\\lambda}$ because they exist under the conditions$Q^{\\lambda+1}$ and $Q^\\lambda$, respectively. Since$SMLSSS_{\\lambda}$ and $MLSSS_{\\lambda+1}$ both exist under the samenecessary and sufficient condition of $Q^{\\lambda+1}$, it is notstraightforward to see whether $MLSSS_{\\lambda+1}$ is strictlycontained in $SMLSSS_{\\lambda}$. For $\\lambda=2$, we already know that$MLSSS_3\\subsetneq SMLSSS_2$ (Section \\ref{subsec:example}). Itwould be interesting to find out if this is also true for $\\lambda >2$. We have also given an efficient transformation from$SMLSSS_{\\lambda}$ to $MLSSS_{\\lambda+1}$. It remains open whether anefficient transformation from $MLSSS_{\\lambda}$ to$SMLSSS_{\\lambda}$ exists whenthe access structure is $Q^{\\lambda+1}$. When $\\lambda=2$, this isa well-known open problem \\cite{Cramer:General}.\\section{Conclusions} \\label{sec:conclusion}In this paper, we propose the new concept of 3-multiplicative LSSS, which form asubclass of strongly multiplicative LSSS. The 3-multiplicative LSSS are easier to constructcompared to strongly multiplicative LSSS. Theycan also simplify the computation and reduce the round complexity insecure multiparty computation protocols. We believe that3-multiplicative LSSS are a more appropriate primitive asbuilding blocks for secure multiparty computations, and deservefurther investigation. We stress that finding efficientconstructions of 3-multiplicative LSSS for general accessstructures remains an important open problem.\\section*{Acknowledgement}The work of M. Liu and Z. Zhang is supported in part by the 973 project of China(No. 2004CB318000). Part of the work was done while Z. Zhang was visiting Nanyang Technological Universitysupported by the Singapore Ministry of Education under Research Grant T206B2204.The work of Y. M. Chee, S. Ling, and H. Wang is supported in part bythe Singapore National Research Foundation under Research Grant NRF-CRP2-2007-03.In addition, the work of Y. M. Cheeis also supported in part by the NanyangTechnological University under Research Grant M58110040, and the work ofH. Wang is also supported in part bythe Australian Research Council under ARC Discovery ProjectDP0665035."}